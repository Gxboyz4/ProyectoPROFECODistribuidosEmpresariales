{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Angel\\\\Documents\\\\VSC\\\\PracticasREACT\\\\practica1\\\\src\\\\componentes\\\\ContenedorCards.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { CardProducto } from \"./CardProducto\";\nimport { FiltrosBarra } from \"./FiltrosBarra\";\nimport '../estilos/ContenedorCards.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ContenedorCards = () => {\n  _s();\n  const [productos, setProductos] = useState([]);\n  const [filtros, setFiltros] = useState({});\n  useEffect(() => {\n    const obtenerProductos = async () => {\n      try {\n        const url = new URL('http://localhost:8080/APIGatewaySupermercados/resources/apisupermercados/productos/consultarfiltros/query');\n        // Agregar los filtros como parámetros de la URL\n        Object.keys(filtros).forEach(key => url.searchParams.append(key, filtros[key]));\n        const response = await fetch(url);\n        if (!response.ok) {\n          throw new Error('Error al obtener productos');\n        }\n        const data = await response.json();\n        setProductos(data);\n      } catch (error) {\n        console.error('Error al obtener productos:', error);\n      }\n    };\n    obtenerProductos();\n  }, [filtros]);\n  const handleFiltroChange = (filtro, valor) => {\n    // Actualizar los filtros seleccionados\n    setFiltros(prevFiltros => ({\n      ...prevFiltros,\n      [filtro]: valor\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FiltrosBarra, {\n      onFiltroChange: handleFiltroChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contenedor-cards\",\n      children: productos.map(producto => /*#__PURE__*/_jsxDEV(CardProducto, {\n        nombre: producto.nombre,\n        nombreSupermercado: producto.nombreSupermercado,\n        categoria: producto.categoria,\n        precio: producto.precio,\n        imagenUrl: producto.imagenUrl\n      }, producto.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_s(ContenedorCards, \"OmKrneX7wQwx+Hfb9FTwNgpMdDY=\");\n_c = ContenedorCards;\nvar _c;\n$RefreshReg$(_c, \"ContenedorCards\");","map":{"version":3,"names":["React","useState","useEffect","CardProducto","FiltrosBarra","jsxDEV","_jsxDEV","ContenedorCards","_s","productos","setProductos","filtros","setFiltros","obtenerProductos","url","URL","Object","keys","forEach","key","searchParams","append","response","fetch","ok","Error","data","json","error","console","handleFiltroChange","filtro","valor","prevFiltros","children","onFiltroChange","fileName","_jsxFileName","lineNumber","columnNumber","className","map","producto","nombre","nombreSupermercado","categoria","precio","imagenUrl","id","_c","$RefreshReg$"],"sources":["C:/Users/Angel/Documents/VSC/PracticasREACT/practica1/src/componentes/ContenedorCards.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { CardProducto } from \"./CardProducto\";\r\nimport { FiltrosBarra } from \"./FiltrosBarra\";\r\nimport '../estilos/ContenedorCards.css';\r\n\r\nexport const ContenedorCards = () => {\r\n    const [productos, setProductos] = useState([]);\r\n    const [filtros, setFiltros] = useState({});\r\n\r\n    useEffect(() => {\r\n        const obtenerProductos = async () => {\r\n            try {\r\n                const url = new URL('http://localhost:8080/APIGatewaySupermercados/resources/apisupermercados/productos/consultarfiltros/query');\r\n                // Agregar los filtros como parámetros de la URL\r\n                Object.keys(filtros).forEach(key => url.searchParams.append(key, filtros[key]));\r\n                \r\n                const response = await fetch(url);\r\n                if (!response.ok) {\r\n                    throw new Error('Error al obtener productos');\r\n                }\r\n                const data = await response.json();\r\n                setProductos(data);\r\n            } catch (error) {\r\n                console.error('Error al obtener productos:', error);\r\n            }\r\n        };\r\n\r\n        obtenerProductos();\r\n    }, [filtros]);\r\n\r\n    const handleFiltroChange = (filtro, valor) => {\r\n        // Actualizar los filtros seleccionados\r\n        setFiltros(prevFiltros => ({\r\n            ...prevFiltros,\r\n            [filtro]: valor\r\n        }));\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <FiltrosBarra onFiltroChange={handleFiltroChange} />\r\n            <div className=\"contenedor-cards\">\r\n                {productos.map(producto => (\r\n                    <CardProducto\r\n                        key={producto.id}\r\n                        nombre={producto.nombre}\r\n                        nombreSupermercado={producto.nombreSupermercado}\r\n                        categoria={producto.categoria}\r\n                        precio={producto.precio}\r\n                        imagenUrl={producto.imagenUrl}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,YAAY,QAAQ,gBAAgB;AAC7C,SAASC,YAAY,QAAQ,gBAAgB;AAC7C,OAAO,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,OAAO,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC,CAAC;EAE1CC,SAAS,CAAC,MAAM;IACZ,MAAMW,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACA,MAAMC,GAAG,GAAG,IAAIC,GAAG,CAAC,2GAA2G,CAAC;QAChI;QACAC,MAAM,CAACC,IAAI,CAACN,OAAO,CAAC,CAACO,OAAO,CAACC,GAAG,IAAIL,GAAG,CAACM,YAAY,CAACC,MAAM,CAACF,GAAG,EAAER,OAAO,CAACQ,GAAG,CAAC,CAAC,CAAC;QAE/E,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAACT,GAAG,CAAC;QACjC,IAAI,CAACQ,QAAQ,CAACE,EAAE,EAAE;UACd,MAAM,IAAIC,KAAK,CAAC,4BAA4B,CAAC;QACjD;QACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClCjB,YAAY,CAACgB,IAAI,CAAC;MACtB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACvD;IACJ,CAAC;IAEDf,gBAAgB,CAAC,CAAC;EACtB,CAAC,EAAE,CAACF,OAAO,CAAC,CAAC;EAEb,MAAMmB,kBAAkB,GAAGA,CAACC,MAAM,EAAEC,KAAK,KAAK;IAC1C;IACApB,UAAU,CAACqB,WAAW,KAAK;MACvB,GAAGA,WAAW;MACd,CAACF,MAAM,GAAGC;IACd,CAAC,CAAC,CAAC;EACP,CAAC;EAED,oBACI1B,OAAA;IAAA4B,QAAA,gBACI5B,OAAA,CAACF,YAAY;MAAC+B,cAAc,EAAEL;IAAmB;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACpDjC,OAAA;MAAKkC,SAAS,EAAC,kBAAkB;MAAAN,QAAA,EAC5BzB,SAAS,CAACgC,GAAG,CAACC,QAAQ,iBACnBpC,OAAA,CAACH,YAAY;QAETwC,MAAM,EAAED,QAAQ,CAACC,MAAO;QACxBC,kBAAkB,EAAEF,QAAQ,CAACE,kBAAmB;QAChDC,SAAS,EAAEH,QAAQ,CAACG,SAAU;QAC9BC,MAAM,EAAEJ,QAAQ,CAACI,MAAO;QACxBC,SAAS,EAAEL,QAAQ,CAACK;MAAU,GALzBL,QAAQ,CAACM,EAAE;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMnB,CACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAC/B,EAAA,CAlDWD,eAAe;AAAA0C,EAAA,GAAf1C,eAAe;AAAA,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}